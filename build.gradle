plugins {
  id "checkstyle"
  id "com.adarshr.test-logger" version "1.6.0"
  id "com.jfrog.bintray" version "1.8.4"
  id "java-library"
  id "jacoco"
  id "maven-publish"
  id "signing"
}

group = "com.github.jlmorgan"
version = file("${rootDir}/.meta/VERSION").text.trim()
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  jcenter()
  mavenCentral()
  mavenLocal()
}

dependencies {
  compile "org.jetbrains:annotations:15.0"

  // Test
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.2"
  testRuntime "org.junit.platform:junit-platform-launcher:1.4.2"
  testRuntime "org.junit.vintage:junit-vintage-engine:5.4.2"
}

wrapper {
  gradleVersion = "5.4.1"
  distributionType = Wrapper.DistributionType.ALL
}

test {
  useJUnitPlatform()

  jacoco {
    classDumpDir = file("${buildDir}/jacoco/classpathdumps")
    destinationFile = file("${buildDir}/jacoco/test.exec")
  }

  testLogging {
    events "passed", "skipped", "failed"
  }
}

bintray {
  key = project.hasProperty("bintrayApiKey")
    ? project.property("bintrayApiKey")
    : System.getenv("BINTRAY_API_KEY")
  user = project.hasProperty("bintrayUser")
    ? project.property("bintrayUser")
    : System.getenv("BINTRAY_USER")
  publications = ["FunctionalExtras"]
  pkg {
    repo = "generic"
    name = "functional-extras"
    userOrg = "jlm"
    licenses = ["MIT"]
    vcsUrl = "https://github.com/jlmorgan/java-functional-extras.git"
    labels = [
      "combinator",
      "compose",
      "const",
      "extras",
      "flip",
      "function",
      "functional",
      "identity",
      "morphism",
      "pipe"
    ]
    publicDownloadNumbers = true
  }
}

checkstyle {
  toolVersion "8.20"
}

jacoco {
  toolVersion "0.8.3"
}

jacocoTestReport {
  reports {
    csv.enabled = false
    xml.enabled = true
    html.destination file("${buildDir}/reports/coverage/html")
    xml.destination file("${buildDir}/reports/coverage/coverage.xml")
  }
}

javadoc {
  if (JavaVersion.current().isJava8Compatible()) {
    options.addBooleanOption("html5", true)
  }
}

testlogger {
  theme "mocha-parallel"
  // NOTE(jlmorgan): Awaiting release of https://github.com/radarsh/gradle-test-logger-plugin.git Issue #109.
  // showSimpleNames true
  slowThreshold 5000
}

task coverage {
  dependsOn test, jacocoTestReport
}

task javadocJar(type: Jar) {
  archiveClassifier = "javadoc"

  from javadoc
}

task sourcesJar(type: Jar) {
  archiveClassifier = "sources"

  from sourceSets.main.allJava
}

tasks.withType(Checkstyle) {
  reports {
    html.enabled true
    xml.enabled true
  }
}

publishing {
  publications {
    FunctionalExtras(MavenPublication) {
      artifactId = "functional-extras"

      artifact javadocJar
      artifact sourcesJar
      from components.java

      pom {
        description = "A collection of functional extras for Java."
        name = "Functional Extras"
        url = "https://github.com/jlmorgan/java-functional-extras"

        licenses {
          license {
            name = "The MIT License"
            url = "https://opensource.org/licenses/MIT"
          }
        }

        developers {
          developer {
            email = "justin.l.morgan@gmail.com"
            id = "jlmorgan"
            name = "Justin Morgan"
          }
        }

        scm {
          connection = "git@github.com:jlmorgan/java-functional-extras.git"
          url = "https://github.com/jlmorgan/java-functional-extras"
        }
      }

      versionMapping {
        usage("java-api") {
          fromResolutionOf("runtimeClasspath")
        }

        usage("java-runtime") {
          fromResolutionResult()
        }
      }
    }
  }
}

signing {
  sign publishing.publications.FunctionalExtras
}
